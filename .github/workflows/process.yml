# git commit -am.; git push -q; yq --from-file "scripts\job.jq" "jobs/$title.yaml" -oj -I0 | gh workflow run process.yml -F data=@- -f title="$title" -f try=true

name: process
run-name: ${{ inputs.title }}
on:
  workflow_dispatch:
    inputs:
      title:
        required: true
      data:
        required: true
      t:
        default: 10
      try:
        default: false

jobs:
  process:
    name: ${{ matrix.file }}
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        include: ${{ fromJson(inputs.data) }}
    env:
      ifile: ${{ matrix.file }}

    steps:
      - name: Variables
        run: |
          name=${ifile%.*}
          {
            echo "name=$name"
            echo "ofile=tmp/$name.mkv"
            echo "ofile2=out/$name.mkv"
          } >> "$GITHUB_ENV"


      - uses: actions/cache/restore@v4
        with:
          key: bin
          path: /home/runner/.local/bin


      - name: Download
        run: |
          rclone copy "${{ vars.INPUT_ROOT }}/${{ inputs.title }}" . \
          --include="${{ matrix.file }}" -v &

          mkdir -p tmp out/{info,logs,images2,begin2,end2,reports}

          echo ${{ vars.PRESET }} | base64 -d > preset 

          shopt -s globstar
          wait
          mv -n **/"$ifile" .


      - name: Try process
        if: inputs.try
        run: |
          cat preset
          echo "${{ matrix.ops }}"

          FFREPORT=file=ffmpeg.log:level=32 \
          ffmpeg -hide_banner -nostdin -nostats -benchmark \
          -i "$ifile" ${{ matrix.ops }} -t ${{ inputs.t }} -fpre preset "$ofile2"

          ffmpeg -v 24 -sseof -${{ inputs.t }} -copyts \
          -i "$ifile" ${{ matrix.ops }} -fpre preset "out/end2/$name.mkv"


      - name: Process
        if: ${{ !inputs.try }}
        run: |
          sudo apt install -yqq libfuse2 &> /dev/null &

          cat preset
          echo "${{ matrix.ops }}"

          FFREPORT=file=ffmpeg.log:level=32 \
          ffmpeg -hide_banner -nostdin -nostats -benchmark \
          -i "$ifile" ${{ matrix.ops }} -fpre preset "$ofile"

          ffmpeg -v 24 -i "$ofile" -t ${{ inputs.t }} -c copy "out/begin2/$name.mkv"
          ffmpeg -v 24 -sseof -${{ inputs.t }} -i "$ofile" "out/end2/$name.mkv"

          wait
          mkvmerge "$ofile" -o "$ofile2"


      - name: Report
        run: |
          mv preset out/info
          sed 2,4d ffmpeg.log > "out/logs/$name.log"

          ffmpeg -v 24 -i "$ofile2" -frames 1 -update 1 "out/images2/$name.png"

          { 
            ffprobe -v 24 -show_streams -show_format -of json "$ifile" | jq -rj '[
              (.streams[0] | .width, .height, .r_frame_rate),
              (.format | .duration, .size, .bit_rate), "*", ""] | @tsv'
            ffprobe -v 24 -show_streams -show_format -of json "$ofile2" | jq -r '[
              (.streams[0] | .width, .height, .r_frame_rate), 
              (.format | .duration, .size, .bit_rate, "\"\(.filename[4:])\"")] | @tsv'
          } | tee "out/reports/$name.txt"


      - name: Upload
        run: rclone copy out "${{ vars.OUTPUT_ROOT }}/${{ inputs.title }}" -v --no-update-modtime
